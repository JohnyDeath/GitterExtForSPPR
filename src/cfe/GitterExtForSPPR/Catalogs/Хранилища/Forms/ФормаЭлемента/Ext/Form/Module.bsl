
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НевыгруженныеВерсии.Параметры.УстановитьЗначениеПараметра( "Владелец" , Объект.Ссылка );
	СписокПроверокАПК.Параметры.УстановитьЗначениеПараметра( "Владелец" , Объект.Ссылка );
	
	ЗаполнитьРеквизитыХранилищаПоВладельцу();//СППР
	ИспользоватьСобственнуюТранзитнуюБазуПриИзмененииНаСервере(ЭтотОбъект, Объект.ИспользоватьСобственнуюТранзитнуюБазу);//СППР
	ОбновитьТекстРегЗадания();//СППР
КонецПроцедуры

&НаКлиенте
Процедура ЛокальныйРепозиторийАдресОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗапуститьПриложение( Объект.ЛокальныйРепозиторийАдрес );
	
КонецПроцедуры

#Область РасширениеСППР

&НаСервере
Процедура ЗаполнитьРеквизитыХранилищаПоВладельцу() 
	РеквизитыХранилища = Новый Структура;
	РеквизитыХранилища.Вставить("ХранилищеАдрес", "КаталогХранилищаДляЗагрузкиМетаданных");
	РеквизитыХранилища.Вставить("ХранилищеПользователь", "ИмяПользователяХранилищаДляЗагрузкиМетаданных");
	РеквизитыХранилища.Вставить("ХранилищеПароль", "ПарольПользователяХранилищаДляЗагрузкиМетаданных");
	
	РеквизитыХранилища = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Владелец, РеквизитыХранилища);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыХранилища);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСобственнуюТранзитнуюБазуПриИзменении(Элемент)
	ИспользоватьСобственнуюТранзитнуюБазуПриИзмененииНаСервере(ЭтотОбъект, Объект.ИспользоватьСобственнуюТранзитнуюБазу);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИспользоватьСобственнуюТранзитнуюБазуПриИзмененииНаСервере(Форма, ЗначениеФлага)
	Форма.Элементы.ГруппаТранзитнаяБаза.Видимость = ЗначениеФлага;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРегламентногоЗаданияПриИзменении(Элемент)
	ОбновитьТекстРегЗадания();
КонецПроцедуры

&НаСервере
Процедура ОбновитьТекстРегЗадания()
	
	ПараметрыЗадания = ПараметрыРегламентногоЗаданияИзОбработки();
	
	Если ПараметрыЗадания = Неопределено Тогда		
		РасписаниеРегЗадания = "";
		Возврат;		
	КонецЕсли;	
	
	РасписаниеРегЗадания = Строка(ПараметрыЗадания.Расписание);	
		
КонецПроцедуры

&НаСервере
Функция ПараметрыРегламентногоЗаданияИзОбработки()
	
	ВидДополнительнаяОбработка = Перечисления.ВидыДополнительныхОтчетовИОбработок.ДополнительнаяОбработка;
	
	Если Объект.ОбработкаРегламентногоЗадания.Вид <> ВидДополнительнаяОбработка Тогда		
		Возврат Неопределено;
	КонецЕсли;
	
	РегламентноеЗаданиеGUID = Неопределено;
	
	Для каждого ЭлементКоманда Из Объект.ОбработкаРегламентногоЗадания.Команды Цикл
		Если (ЭлементКоманда.ВариантЗапуска <> Перечисления.СпособыВызоваДополнительныхОбработок.ВызовСерверногоМетода
			И ЭлементКоманда.ВариантЗапуска <> Перечисления.СпособыВызоваДополнительныхОбработок.СценарийВБезопасномРежиме) Тогда
			Продолжить;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ЭлементКоманда.РегламентноеЗаданиеGUID) Тогда
			РегламентноеЗаданиеGUID = ЭлементКоманда.РегламентноеЗаданиеGUID;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(РегламентноеЗаданиеGUID) Тогда		
		Возврат Неопределено;
	КонецЕсли;
			
	РегламентноеЗадание = ДополнительныеОтчетыИОбработкиРегламентныеЗадания.НайтиЗадание(РегламентноеЗаданиеGUID);
	Если РегламентноеЗадание = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОсновныеПараметры = ДополнительныеОтчетыИОбработкиРегламентныеЗадания.ПолучитьПараметрыЗадания(РегламентноеЗадание);
	ОсновныеПараметры.Вставить("РегламентноеЗаданиеGUID", РегламентноеЗаданиеGUID);
	Возврат ОсновныеПараметры;
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьНовоеРасписаниеВРегЗадании(РегламентноеЗаданиеGUID, Расписание)
	РегламентноеЗадание = ДополнительныеОтчетыИОбработкиРегламентныеЗадания.НайтиЗадание(РегламентноеЗаданиеGUID);
	Если РегламентноеЗадание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РегламентноеЗадание.Расписание = Расписание;
	РегламентноеЗадание.Записать();
КонецПроцедуры 

&НаКлиенте
Процедура РасписаниеРегЗаданияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИзменитьРасписаниеРегЗадания();		
КонецПроцедуры

&НаКлиенте
Процедура РасписаниеРегЗаданияНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИзменитьРасписаниеРегЗадания();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРасписаниеРегЗадания()
	ПараметрыЗадания = ПараметрыРегламентногоЗаданияИзОбработки();
	Если ПараметрыЗадания = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ИзменитьРегламентноеЗаданиеЗавершение", ЭтотОбъект, ПараметрыЗадания);
	
	РедактированиеРасписания = Новый ДиалогРасписанияРегламентногоЗадания(ПараметрыЗадания.Расписание);
	РедактированиеРасписания.Показать(Обработчик);
КонецПроцедуры
 

&НаКлиенте
Процедура ИзменитьРегламентноеЗаданиеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	Если Расписание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьНовоеРасписаниеВРегЗадании(ДополнительныеПараметры.РегламентноеЗаданиеGUID, Расписание);
	ОбновитьТекстРегЗадания();
КонецПроцедуры

#КонецОбласти 